version: '3'
services:

  users_app:
    build:
      context: ./users-service
      dockerfile: Dockerfile
    image: users-service
    container_name: users_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./users-service:/var/www
    networks:
      - app-network

  notifications_app:
    build:
      context: ./notifications-service
      dockerfile: Dockerfile
    image: notifications-service
    container_name: notifications_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./notifications-service:/var/w

ww
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./users-service:/var/www/users
      - ./notifications-service:/var/www/notifications
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  db:
    image: mysql:5.7
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local